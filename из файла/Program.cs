using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.AccessControl;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace из_файла
{
    class Program
    {
        #region что нужно сделать 
       
        //Создать прототип информационной системы,
        //в которой есть возможност работать со структурой организации
        //В структуре присутствуют департаменты и сотрудники
        //Каждый департамент может содержать не более 1_000_000 сотрудников.
        //У каждого департамента есть поля:
        //наименование,
        //дата создания,
        //количество сотрудников числящихся в нём 
        //(можно добавить свои пожелания)
        
        //У каждого сотрудника есть поля:
        //Фамилия, 
        //Имя
        //, Возраст, 
        //департамент в котором он числится, 
        //уникальный номер,
        //размер оплаты труда, 
        //количество закрепленным за ним.
        
        //В данной информаиционной системе должна быть возможность 
        //- импорта и экспорта всей информации в xml и json
        //Добавление, удаление, редактирование сотрудников и департаментов
        
        //* Реализовать возможность упорядочивания сотрудников в рамках одно департамента 
        //по нескольким полям, например возрасту и оплате труда
        
        // №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
        // 1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
        // 2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
        // 3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
        // 4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
        // 5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
        // 6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
        // 7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
        // 8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
        // 9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
        //10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
        
        
        //Упорядочивание по одному полю возраст
        
        // №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
        // 2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
        //10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
        // 9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
        // 3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
        // 5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
        // 6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
        // 1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
        // 8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
        // 7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
        // 4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
        
        
        //Упорядочивание по полям возраст и оплате труда
        
        // №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
        //10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
        // 2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
        // 9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
        // 6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
        // 3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
        // 5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
        // 1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
        // 7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
        // 8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
        // 4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
        
        
        //Упорядочивание по полям возраст и оплате труда в рамках одного департамента
        
        // №     Имя       Фамилия     Возраст     Департамент     Оплата труда    Количество проектов
        // 9   Имя_9     Фамилия_9          21         Отдел_1            30000                      3 
        // 6   Имя_6     Фамилия_6          22         Отдел_1            10000                      3 
        // 3   Имя_3     Фамилия_3          22         Отдел_1            20000                      3 
        // 1   Имя_1     Фамилия_1          23         Отдел_1            10000                      3 
        // 7   Имя_7     Фамилия_7          23         Отдел_1            20000                      3 
        // 8   Имя_8     Фамилия_8          23         Отдел_1            30000                      3 
        // 4   Имя_4     Фамилия_4          24         Отдел_1            10000                      3 
        //10  Имя_10    Фамилия_10          21         Отдел_2            10000                      3 
        // 2   Имя_2     Фамилия_2          21         Отдел_2            20000                      3 
        // 5   Имя_5     Фамилия_5          22         Отдел_2            20000                      3 
        
     
        #endregion

        public static void Main()
        {
            var Wrk = new Works();
            var Dlt = new Department();
            MainMenu();

            #region методы 

            void MainMenu()
            {
                Console.WriteLine("\nИнформационная система!\n\n");
                Console.WriteLine("Для работы с системой выберите пункт меню:\n" +
                    "100\tДля тестового заполнения БД\n" +
                    "1\tДля просмотра всех сотрудников\n" +
                    "2\tДля просмотра всех отделов\n" +
                    "3\tДля сохранения базы данных\n" +
                    "4\tДля выхода из программы"
                    );
                string result = Check.InputCheck(true, false);//Console.ReadLine();
                switch (result)
                {
                    case "100": Test(); break;
                    case "1": Workers(); break;
                    case "2": Deps(); break;
                    case "3": SaveBD(); break;
                    case "4": break;
                    default: Console.WriteLine("Выбор не понятен попробуйте еще разю"); break;
                }
            }

            void Workers() //меню работы с сотрудниками
            {
                Console.WriteLine("Информационная система!\n" +
                    "Меню для работы с БД сотрудников");
                Console.WriteLine("Для работы с системой выберите пункт меню:\n" +
                    "1\tДля просмотра всех сотрудников\n" +
                    "2\tДля Создание сотрудника \n" +
                    "3\tДля Редактирование сотрудника\n" +
                    "4\tДля Удаление сотрудника\n" +
                    "5\tДля возврата в главное меню."
                    );
                string result = Console.ReadLine();
                switch (result)
                {
                    case "1": Wrk.PrintAllWorkers(); break;  //Просмотр всех сотрудников 
                    case "2": Wrk.AddWorkers(); break;       //Создание сотрудника  
                    case "3": Wrk.EditWorker(); break;       //Редактирование сотрудника
                    case "4": Wrk.DeleteWorker(); break;     //Удаление сотрудника
                    case "5": break;
                    default: Console.WriteLine("Выбор не понятен попробуйте еще разю"); break;
                }
                MainMenu();
            }

            void Deps() // меню работы с отделами
            {
                Console.Clear();
                Console.WriteLine("Информационная система!\n\n");
                Console.WriteLine("Для работы с системой выберите пункт меню:\n" +
                    "1\tДля Просмотр отделов \n" +
                    "2\tДля Создание нового Отдела\n" +
                    "3\tДля Редактирование отдела \n" +
                    "4\tДля Удаление отдела\n" +
                    "5\tДля возврата в главное меню."

                    );
                string result = Console.ReadLine();
                switch (result)
                {
                    case "1": Dlt.Print(); Deps(); break;               // Просмотр отделов 
                    case "2": Dlt.NewDepartment(); break;       // Создание нового Отдела  
                    case "3": Dlt.EditDept(); break;            // Редактирование отдела  
                    case "4": Dlt.DeleteDept(); break;          // Удаление отдела 
                    case "5": break;
                    default: Console.WriteLine("Выбор не понятен попробуйте еще разю"); break;
                }
                MainMenu();
            }

            void SaveBD() // меню сохранения БД
            {
                Console.Clear();
                Console.WriteLine("Информационная система!\n\n");
                Console.WriteLine("Для работы с системой выберите пункт меню:\n" +
                    "1\tДля просмотра всех сотрудников\n" +
                    "2\tДля просмотра всех отделов" +
                    "3\tДля сохранения базы данных" +
                    "4\tДля выхода из программы"
                    );
                string result = Console.ReadLine();
                switch (result)
                {
                    case "1": Workers(); break;
                    case "2": Deps(); break;
                    case "3": SaveBD(); break;
                    case "4": break;
                    default: Console.WriteLine("Выбор не понятен попробуйте еще разю"); break;
                }
            }

            void Test()
            {
                Random rnd = new Random();
                Console.WriteLine("\n\nТестовый режим, автоматическое заполнение БД.");

                // Тестовое заполнение списка отделов случайным количеством.
                int testDept = rnd.Next(1, 10);

                // Тестовое заполнение списка сотрудников случайным количеством.
                int testWokers = rnd.Next(10, 100);
                for (int i = 0; i <= testWokers; i++)
                {
                    Wrk.AddWorkersTest($"Вася_{i}", $"Пупкин_{i}", rnd.Next(20, 63), $"Отдел {rnd.Next(1, testDept + 1)}", rnd.Next(30000, 100000), rnd.Next(0, 5));
                }

                for (int i = 1; i <= testDept; i++)
                {
                    Dlt.NewDepartmentTest($"Отдел {i}");
                }

                Console.WriteLine($"\nСоздано {testDept} Отделов\n");
                Dlt.Print();
                Console.WriteLine($"\nСоздано {testWokers} сотрудников\n");
                Wrk.PrintAllWorkers();
                MainMenu();
            }
            #endregion
        }
    }
}
